// Written by: Luke Miller
// Tested by: Luke Miller
// Debugged by: Luke Miller

package simulation;

import java.sql.Timestamp;
import java.util.Date;

public class Reservation {

	public User U; //User Associated with Reservation
	private int RID; //Registration ID -> Generated by current ReservationCount
	public Timestamp StartTime; //Start Time of Reservation
	public Timestamp StopTime; //Stop Time of Reservation
	public static int ReservationCount = 0; // Increment for determining RID
	
	//Setup
	public Reservation(int RID, Timestamp StartTime, Timestamp StopTime, User U){
		
		this.RID = RID;
		this.StartTime = StartTime;
		this.StopTime = StopTime;
		this.U = U;
		Reservation.ReservationCount ++;
		
	}
	
	//For Printing purposes
	public String toString(){
		
		String printValue;
		
		printValue = "User: " + U + " RID: " + RID + " StartTime: " + StartTime + " StopTime: " + StopTime;
		
		return printValue;
	}
	
	//Given a User U, generates a new reservation in time frame at top of method -> Does not currently check for max capacity!
	public static Reservation generateNewReservation(User U){
		
		//This is the range of available times
		//long offset = Timestamp.valueOf("2016-03-20 00:00:00").getTime();
		//long end = Timestamp.valueOf("2016-10-20 00:00:00").getTime();
		//
		
		Date date= new Date();
		Timestamp CurrentTime = new Timestamp(date.getTime());
		
		//long offset = Timestamp.valueOf("2016-03-29 00:00:00").getTime();
		long offset = CurrentTime.getTime();
		
		//long end = Timestamp.valueOf("2016-03-30 00:00:00").getTime();
		long end = CurrentTime.getTime() + 600;
		
		long diff = end - offset + 1;
		
		Timestamp start = new Timestamp(offset + (long)(Math.random() * diff));
		Timestamp stop = new Timestamp(offset + (long)(Math.random() * diff));
		
		//Reservation between 10min and 120min
		int MinuteDuration = User.randomWithRange(1, 3);
		Long duration = (long) (((MinuteDuration * 60)) * 1000);
		stop.setTime(start.getTime() + duration);
		
		//Returns new reservation with indicated timing
		Reservation newRes = new Reservation(Reservation.ReservationCount,start, stop, U);
		return newRes;
		
	}
	
	
}
